{
  "command.publiconly": "!%{command} command can only be used in a public channel",
  "command.privateonly": "!%{command} command can only be used in private message",
  "command.toofewparams": "!%{command} command was given too few parameters. %{usage} %{example}",
  "command.toomanyparams": "!%{command} command was given too many parameters. %{usage} %{example}",
  "command.blacklist": "CAUTION: A user on the dispatching blacklist (%{nick}) used the %{command} command!",
  "whoami.notloggedin": "You are not logged in to NickServ, so I don't know why you're asking me.",
  "whoami.nodata": "You are logged in as user %{account} but I couldn't find IRC services data for this account.",
  "whoami.noaccount": "You are logged in as user %{account} but I couldn't find a Fuel Rats API account linked to you.",
  "whoami.response": "You are logged in as user %{account} (%{verified}) and have Fuel Rats User ID %{userId}. Joined: %{joined}. Rats: %{rats}.",
  "whois.notfound": "Could not check account status for %{nick} as they were not found in the users list.",
  "whois.notloggedin": "Could not check account status for %{nick} as they are not logged in to NickServ.",
  "whois.nodata": "%{nick} is logged in to NickServ as %{account} but I could not find any IRC services data for their account.",
  "whois.noaccount": "%{nick} is logged in to NickServ as %{account} but I could not find a Fuel Rats account linked to their nick.",
  "whois.response": "%{nick} is logged in as user %{account} (%{verified}) and have Fuel Rats User ID %{userId}. Joined: %{joined}. Rats: %{rats}.",
  "groups.nouser": "No user data was found for nick: %{nick}",
  "groups.response": "The nick %{nick} has the following permission groups: %{groups}",

  "jumpcall.notfound": "CAUTION: You called jumps for case #%{case} but this case is not currently on the board.",
  "jumpcall.noaccount": "CAUTION: You called jumps for case #%{case} but no Fuel Rats account can be found for you.",
  "jumpcall.wrongplatform": "CAUTION: You called jumps for case #%{case} which is on %{platform} but you do not have a registered rat for this platform.",
  "jumpcall.notprepped": "CAUTION: You have called jumps for a case where the client has not been !prep'd or told to logout. The first rat to respond to a case should always take care of this beforehand.",
  
  "systemsearch.noresults": "No results were found for this system.",
  "systemsearch.nearestmatches": "Nearest matches for %{system} are %{results}.",
  "systemsearch.error": "An error occured performing a system search.",
  "sysc.noresults": "No nearest system matches found for case #%{caseId} (%{client}).",
  "sysc.nearestmatches": "Nearest matches found for case #%{caseId} (%{client}): %{systems} (use !sysc <case id/client> <number> to correct system).",
  "sysc.error": "Unable to check nearest system matches for case #%{caseId} (%{client}) due to a problem with the server.",
  "sysc.nocorrections": "There are no corrections known for case #%{caseId} (%{client})",
  "sysc.invalidindex": "%{index} is not a valid system correction index number.",
  "sysc.seterror": "Unable to set system for case #%{caseId} (%{client}) to \"%{system}\" due to an error with the systems API.",
  "landmark.noresults": "%{system} was not found in the galaxy database.",
  "landmark.response": "%{system} is %{distance}ly from %{landmark}.",

  "board.clientjoin": "Client of case #%{caseId} (%{client}) has joined!",
  "board.clientjoinhost": "Caution: Client of case #%{caseId} (%{client}) has joined with a different name! (%{nick})",
  "board.clientquit": "Caution: Client of case #%{caseId} (%{client}) has left!",
  "board.synced": "Successfully synced board with %{api}. %{downstreamNew} new rescues were synced from the server and %{upstreamNew} new local rescues were synced to the server. %{downstreamChange} server-side changes were found and synced and %{upstreamChange} local changes were synced to the server. %{conflicts} case ID conflicts occured.",
  "board.syncfailed": "Unable to connect to rescue server, running in offline mode and attempting periodic re-sync.",
  
  "board.announce.nosystem": "%{signal} - CMDR %{client} - Reported System: None - Platform: %{platform} - O2: %{oxygen} (Case #%{caseId}) %{platformSignal} Language: %{language} (%{langCode})",
  "board.announce.notindb": "%{signal} - CMDR %{client} - Reported System: %{system} (not in galaxy database) - Platform: %{platform} - O2: %{oxygen} (Case #%{caseId}) %{platformSignal} Language: %{language} (%{langCode})",
  "board.announce.landmark": "%{signal} - CMDR %{client} - Reported System: %{system} (%{distance} LY from %{landmark}) - Platform: %{platform} - O2: %{oxygen} (Case #%{caseId}) %{platformSignal} Language: %{language} (%{langCode})",
  "board.announce.permit": "%{signal} - CMDR %{client} - Reported System: %{system} (%{distance} LY from %{landmark}) %{permit} - Platform: %{platform} - O2: %{oxygen} (Case #%{caseId}) %{platformSignal} Language: %{language} (%{langCode})",
  
  "board.signal.nosystem": "Received R@TSIGNAL from %{client}. Calling all available rats for %{platform} Case #%{caseId} %{cr} %{platformSignal}",
  "board.signal.notindb": "Received R@TSIGNAL from %{client}. Calling all available rats for %{platform} case in \"%{system}\" (not in galaxy database) %{cr} (Case #%{caseId}) %{platformSignal}",
  "board.signal.landmark": "Received R@TSIGNAL from %{client}. Calling all available rats for %{platform} case in \"%{system}\" (%{distance} LY from %{landmark}) %{cr} (Case #%{caseId}) %{platformSignal}",
  "board.signal.permit": "Received R@TSIGNAL from %{client}. Calling all available rats for %{platform} case in \"%{system}\" (%{distance} LY from %{landmark}) %{permit} %{cr} (Case #%{caseId}) %{platformSignal}",
  "board.signal.exists": "CMDR %{client} belongs to existing %{platform} %{cr} case #%{caseId} in %{system}.",
  "board.signal.helpyou": "%{client} You already sent a Signal! Please stand by, someone will help you soon!",
  "board.signal.oxygen": "%{client} Are you on emergency oxygen? (\"oxygen depleted in xx.xx\" timer counting down in the top right of your cockpit)",
  "board.signal.changes": "CAUTION: The new signal for case #%{caseId} has changes: %{changes}",
  
  "board.casenotfound": "Could not find a case ID or client name matching \"%{caseIdentifier}\".",
  "board.platformset": "Platform for case #%{caseId} (%{client}) set to: %{platform}.",
  "board.toggleactive": "Status of case #%{caseId} (%{client}) set to: %{status}.",
  "board.nopermission": "You do not have permission to perform this command.",
  
  "board.syschange.notindb": "System for case #%{caseId} (%{client}) has been changed to \"%{system}\" (Not in galaxy database).",
  "board.syschange.landmark": "System for case #%{caseId} (%{client}) has been changed to \"%{system}\" (%{distance} LY from %{landmark}).",
  "board.syschange.permit": "System for case #%{caseId} (%{client}) has been changed to \"%{system}\" (%{distance} LY from %{landmark}) %{permit}.",
  
  "board.clientchange": "Client name for case #%{caseId} (%{oldClient}) has been changed to: %{client}.",
  "board.clientchange.exists": "Refusing to set client name of case #%{caseId} to \"%{client}\" as that is already the client of another case.",
  "board.nickchange": "Client nick for case #%{caseId} (%{client}) has been changed to %{nick}.",
  "board.nickchange.exists": "Refusing to set client nick of case #%{caseId} to \"%{nick}\" as that is already the client nick of another case.",
  "board.codered.active": "CODE RED! %{client} (#%{caseId}) is on emergency oxygen!",
  "board.codered.attention": "%{rats}; this is your case!",
  "board.codered.no": "Case #%{caseId} (%{client}) is no longer CR.",
  "board.titleset": "Title for case #%{clientId} (%{client}) has been set to \"Operation %{title}\".",
  "board.caseopened": "Case #%{caseId} opened for %{client} with \"%{message}\".",

  "board.inject.ignored": "Ignoring inject command with client name \"client\" as it was likely accidental input. If this is on purpose create a case with a different name and then rename it with !cmdr and !nick.",
  "board.grab.noclient": "Could not find the client for case %{caseId} in the channel.",
  "board.grab.nomessage": "Could not find any messages by %{client} in the channel.",
  "board.grab.notcreated": "Could not find an existing case for %{client} and could not create one from the contents of this message.",
  "board.grab.updated": "Updated case #%{clientId} with \"%{text}\".",

  "board.assign.noplatform": "Cannot assign rats to a case without a platform set (!pc | !xb | !ps).",
  "board.assign.none": "Found nobody to assign to case #%{caseId}",
  "board.assign.go": {
      "one": "%{client}: Please add the following rat to your friends list: %{rats}",
      "other": "%{client}: Please add the following %{count} rats to your friends list: %{rats}"
  },
  "board.assign.gocr": {
      "one": "%{client}: Please REMAIN at the main menu and add the following rat to your friends list: %{rats}",
      "other": "%{client}: Please REMAIN at the main menu and add the following %{count} rats to your friends list: %{rats}"
  },
  "board.assign.unidentified": "WARNING: Could not find a %{platform} account associated with these rats: %{rats}.",
  "board.unassign.notassigned": "Could not unassign %{rats} from case #%{caseId}, they are not assigned.",
  "board.unassign.removed": "Unassigned %{rats} from case #%{caseId}.",
  
  "board.sub.invalidindex": "Cannot substitute index %{index} into the case as it is not a valid index.",
  "board.sub.outofbounds": "Cannot substitute index %{index} of case #%{caseId} as it is out of bounds.",
  "board.sub.updated": "Updated line %{index} of case #%{caseId} with \"%{contents}\".",
  "board.sub.deleted": "Deleted line %{index} of case #%{caseId}",
  
  "board.list.cases": "%{count} cases found, %{cases}",
  "board.list.none": "No matching cases found.  %{flags}",
  "board.list.case.default": "[%{caseId}] %{client} (%{platform}) %{cr} %{assigned}",
  "board.list.inactivecase.default": "[%{caseId}] %{client} (%{platform}) %{cr} (Inactive) %{assigned}",
  "board.list.case.includeid": "[%{caseId}] (%{id}) %{client} (%{platform}) %{cr} %{assigned}",
  "board.list.inactivecase.includeid": "[%{caseId}] (%{id}) %{client} (%{platform}) %{cr} %{assigned}",
  
  "board.quote.title": "Case #%{caseId} CMDR %{client} in %{system} (%{platform}) %{cr}",
  "board.quote.operation": "\"Operation %{title}\" (Case #%{caseId}) (%{client}) in %{system} (%{platform}) %{cr}",
  "board.quote.dates": "Opened %{created}, last updated %{updated}",
  
  "board.quote.quote": "[%{index}] %{author} (%{time}): %{message}",
  "board.quote.noassigned": "No rats are assigned to this case.",
  "board.quote.assigned": "Assigned rats: %{rats}",
  
  "board.close.notfound": "Unable to close case #%{caseId} to \"%{firstLimpet}\", no rat was found.",
  "board.close.notassigned": "Unable to close case #%{caseId} to \"%{firstLimpet}\" as they are not assigned to the case.",
  "board.close.reportFirstlimpet": "Closed case #%{caseId} (%{client}) to %{firstLimpet}. Do the paperwork: %{link}",
  "board.close.firstLimpetPaperwork": "Here is your paperwork for case #%{caseId} (%{client}): %{link}",
  "board.close.report": "Closed case #%{caseId} (%{client}). Do the paperwork %{link}",
  "board.close.success": "Successfully closed case #%{caseId} (%{client}).",
  "board.close.error": "Failed to close case #%{caseId} due to an error with the rescue server.",
  
  "board.trash.success": "Successfully added case #%{caseId} to the trash.",
  "board.trash.error": "Failed to add case #%{caseId} to the trash due to an error in the rescue server.",
  
  "board.title.set": "Title for case #%{caseId} set to \"%{title}\".",
  
  "board.pwl.generated": "Paperwork link for case #%{caseId} is: %{link}",
  
  "board.quiet.unknown": "Unfortunately I do not know when the last case was.",
  "board.quiet.recent": "The last case was %{timespan} ago.",
  "board.quiet.notrecent": "The last case was %{timespan} ago. Time to summon a case?",
  "board.quiet.quiet": "Wow, the last signal was so long ago... %{timespan} ago to be exact! Orangey approves!",
  
  "board.notprepped": "WARNING: Client for case #%{caseId} has NOT been !prep-ed!",
  
  "version.message": "MechaSqueak version %{version}, up %{uptime}, since %{startup}.",
  "version.drillmode": "MechaSqueak version %{version} (running in Drill Mode), up %{uptime}, since %{startup}.",
  "sysstats.message": "The systems database as of %{date} ago contains %{systems} star systems, with %{stars} stars and %{bodies} stellar bodies.",
  "sysstats.error": "I was unable to request statistics information from the Systems API due to an error.",
  
  "rescue.closed.invalid": "Could not list recently closed cases, !closed takes an optional number between 1 and 10.",
  "rescue.closed.error": "Failed to look up recently closed cases due to an error in the rescue server.",
  "rescue.closed.list": "Listing the %{count} most recently closed rescues:",
  "rescue.closed.entry": "%{index}: Client %{client} (%{platform}) in %{system} (%{id})",
  
  "rescue.delete.invalid": "Could not delete rescue %{id} as it is not a valid rescue ID.",
  "rescue.delete.active": "Could not delete rescue %{id} as it is currently open on the board as case #%{caseId}.",
  "rescue.delete.success": "Successfully deleted rescue %{id}.",
  "rescue.delete.failure": "Failed to delete rescue %{id} due to an error in the rescue server.",
  
  "rescue.trashlist.list": "Listing %{count} rescues added to the trash list:",
  "rescue.trashlist.entry": "[%{id}] %{client} (%{platform}), Reason: %{reason}",
  "rescue.trashlist.entrycr": "[%{id}] %{client} (%{platform}) \u00034CR\u0003, Reason: %{reason}",
  "rescue.trashlist.error": "Failed to fetch the rescue trash list due to an error in the rescue server.",
  "rescue.trashlist.empty": "There are currently no rescues in the trashlist.",
  
  "rescue.restore.invalid": "Could not restore rescue \"%{id}\" as it is not a valid rescue ID.",
  "rescue.restore.nottrash": "Could not restore rescue \"%{id}\" as it is not currently marked as trash.",
  "rescue.restore.restored": "Successfully restored rescue \"%{id}\". Use !reopen to add it to the board.",
  "rescue.restore.error": "Failed to restore rescue \"%{id}\" due to an error in the rescue server.",
  
  "rescue.unfiled.list": "Listing %{count} incomplete paperwork cases:",
  "rescue.unfiled.entry": "Rescue of %{client} in %{system} (%{platform}) Link: %{link}",
  "rescue.unfiled.empty": "There are currently no rescues with incomplete paperwork.",
  "rescue.unfiled.error": "Encountered a server error when retrieving the list of unfiled paperwork.",
  
  "rescue.quoteid.title": "Rescue %{id} (%{client}) in %{system} (%{platform}) opened %{created}, last updated %{updated}",
  "rescue.quoteid.quote": "[%{index}] %{author} (%{time}): %{message}",
  "rescue.quoteid.invalid": "Could not quote rescue \"%{id}\" as it is not a valid rescue ID.",
  "rescue.quoteid.error": "Could not quote rescue \"%{id}\" as an error was encountered when retreiving it from the rescue server.",
  
  "rescue.reopen.failure": "Could not reopen rescue %{id} due to an error from the server.",
  "rescue.reopen.success": "Rescue %{id} has been re-opened as case #{caseId}.",
  "rescue.reopen.invalid": "Could not reopen rescue \"%{id}\" as it is not a valid rescue ID.",
  "rescue.reopen.error": "Could not reopen rescue \"%{id}\" due to an error from the rescue server.",
  "rescue.reopen.exists": "Could not reopen rescue \"%{id}\" as it is already currently on the board as case #%{caseId}.",
  "rescue.reopen.opened": "Rescue \"%{id}\" has been re-opened and added to the board as case #%{caseId}.",
  
  "shorten.invalidurl": "Could not shorten URL as an invalid url was provided.",
  "shorten.error": "Was unable to shorten URL due to a request error.",
  "shorten.shortened": "URL has been shortened to: %{url} - Title: %{title}",

  "tweet.success": "Successfully posted tweet from @FuelRatAlerts.",
  "tweet.error": "Encountered an error in posting tweet from @FuelRatAlerts.",
  "tweetcase.noplatform": "Could not generate a case tweet for case #%{caseId} as no platform is set.",
  "tweetcase.missingsystem": "Could not generate a case tweet for case #%{caseId} as no system is set.",
  "tweetcase.nosystem": "%{platform} rats needed for a rescue! Call your jumps, rats! Case #%{caseId} (%{id}) %{link}",
  "tweetcase.nosystemcr": "%{platform} rats needed for a CODE RED rescue! Call your jumps, rats! Case #%{caseId} (%{id}) %{link}",
  "tweetcase.system": "%{platform} rats needed for a rescue %{systemDescription}! Call your jumps, rats! Case #%{caseId} (%{id}) %{link}",
  "tweetcase.systemcr": "%{platform} rats needed for a CODE RED rescue %{systemDescription}! Call your jumps, rats! Case #%{caseId} (%{id}) %{link}",
  "tweetcase.success": "Successfully sent tweet for case #%{caseId}.",
  "tweetcase.failure": "Encountered an error in posting a tweet for case #%{caseId}.",
  
  "autocorrect.correction": "\u0002\u000304Autocorrect\u0003\u0002 \"%{system}\" is probably \"%{correction}\".",
  
  "facts.invalidargument": "Invalid argument given to !facts command, !facts accepts add, set, info, locales, and del.",
  "facts.set.syntax": "Invalid arguments, syntax: !facts add/set <name>[-language code] <message>.",
  "facts.set.error": "Encountered an error saving !%{fact}.",
  "facts.set.updated": "Successfully updated !%{fact} (%{locale} locale) with the new message: \"%{message}\".",
  "facts.set.created": "Successfully created new fact !%{fact} (%{locale} locale) with the new message: \"%{message}\".",
  "facts.set.nopermission": "You lack the required permission to update facts.",
  "facts.del.syntax": "Invalid arguments, syntax: !facts del <name>[-language code].",
  "facts.del.nopermission": "You lack the required permission to delete facts.",
  "facts.del.error": "Encountered an error trying to delete !%{fact}",
  "facts.del.success": "%{fact} has been successfully deleted!",
  "facts.del.notfound": "Could not delete !%{fact} as it does not currently exist.",
  "facts.list.error": "I was unable to retrieve the list of facts due to an error.",
  "facts.list.heading": "Listing %{count} stored %{locale} facts: ",
  "facts.list.none": "No facts were found for %{locale} locale.",
  "facts.info.syntax": "Invalid arguments, syntax: !facts info <name>[-language code].",
  "facts.info.notfound": "Could not find a %{locale} locale command named \"%{fact}\".",
  "facts.info.error": "Encountered an error looking up information for fact !%{fact}",
  "facts.info.message": "Info for !%{fact} (%{locale} locale): Created at %{created}, last updated by %{author} at %{updated}. Contents: \"%{excerpt}\"",
  "facts.locales": "Listing all locales in the database: %{locales}",
  "fact.fallback": "!%{fact} is not available in %{language} (%{identifier}), falling back to English",
  
  "say.sending": "Sending message \"%{contents}\" to %{target}",
  "me.sending": "Emoting \"%{contents}\" to %{target}",

  "flushall.response": "Cleared local cache and fetching user data for all logged in users..",
  "flush.notfound": "%{name} was not found in the account data cache.",
  "flush.nouser": "Cleared local cache for %{name} but I was unable to fetch a new copy as no online user for them could be found.",
  "flush.response": "Cleared local cache for %{name} and fetching new copy..",


  "help.howto": "This is a list of MechaSqueak's command categories, to see a detailed view of all the commands in a category, do \u0002!help <category>\u0002, (e.g !help board). To see information about a specific command, do \u0002!help !command\u0002 (e.g !help !assign).",
  "help.nofacts": "Information commands such as !prep and !pcwing are not listed here, to see a list of those, use !facts.",
  "help.categoryerror": "%{category} is not in the categories list. To list all categories, do !help. To see help for a specific command, add a ! before the command.",
  "help.categorylist": "Showing commands in the %{category} category. To see see more information about the command, do !help !command (e.g !help !assign).",
  "help.commandlist": "\u0002!%{command}\u0002 %{params} - %{description}",
  "help.commandtitle": "\u0002!%{command}\u0002 %{params} %{example}",
  "help.commandaliases": "Aliases: %{aliases}",
  "help.commanderror": "!%{command} is not a known command, it may be a fact (simple commands that tell you a piece of information) to see a list of those, use !facts.",

  "help.category.board": "View, edit and manage cases on the board.",
  "help.category.rescues": "View, edit and manage rescues that have already been completed.",
  "help.category.facts": "View, edit and manage the list of information commands such as !prep",
  "help.category.utility": "Various commands that provide utility for rats and dispatches, such as tweeting a case or looking up a star system",
  "help.cateogory.management": "Admin Commands to manage the state of the bot",
  "help.category.other": "Commands that don't fit into any category",

  "help.command.list": "Flags: -r: Show only with assigned rats, -u: Show only with no assigned rats, -a: Show only active cases. -i: Show only inactive cases, -@: Display case UUIDs.",
  "help.command.trash": "Consult https://confluence.fuelrats.com/pages/releaseview.action?pageId=2687182 to see when cases should be deleted.",
  "help.command.clear": "Consult https://confluence.fuelrats.com/pages/releaseview.action?pageId=2687182 to see when cases should be closed and when they should be deleted.",
  "help.command.facts": "Append - followed by the language code after the command to view all the facts for a specific localisation. 'list' lists all facts for a language, 'add'/'set' creates or modifies a fact, 'del'/'delete' deletes a fact, 'info' shows information about a fact, 'locales' lists all locales that have facts."
}
